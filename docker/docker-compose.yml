
services:

  memory-agent-cpu:
    container_name: memory-agent-cpu
    profiles:
      - cpu
      - dev
    restart: always
    image: ghcr.io/gzileni/memory-agent:cpu
    pull_policy: never
    ports:
      - "8000:8000"
      - "6379:6379"   # Redis
      - "6333:6333"   # QDrant
      - "6334:6334"   # QDrant
      - "7474:7474" # HTTP - Neo4j
      - "7687:7687" # Bolt - Neo4J
    expose:
      - "8000"
      - "6379"
      - "6333"
      - "6334"
      - "7474"
      - "7687"
    networks:
      - memory-network
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - COLLECTION_NAME=${COLLECTION_NAME}
      - MODEL_EMBEDDING=${MODEL_EMBEDDING}
      - LLM_URL=${LLM_URL}
      - LOKI_URL=http://kgrag-mcp-loki:3100/loki/api/v1/push
      - NEO4J_AUTH=none
    volumes:
      - qdrant_data:/qdrant/storage:z
      - redis_data:/data
      - neo4j_data:/var/lib/neo4j/data

  memory-agent-gpu:
    container_name: memory-agent-gpu
    profiles:
      - gpu
    restart: always
    image: ghcr.io/gzileni/memory-agent:gpu
    ports:
      - "8000:8000"
      - "6379:6379"   # Redis
      - "6333:6333"   # QDrant
      - "6334:6334"   # QDrant
      - "7474:7474" # HTTP - Neo4j
      - "7687:7687" # Bolt - Neo4J
    expose:
      - "8000"
      - "6379"
      - "6333"
      - "6334"
      - "7474"
      - "7687"
    networks:
      - memory-network
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - COLLECTION_NAME=${COLLECTION_NAME}
      - MODEL_EMBEDDING=${MODEL_EMBEDDING}
      - LLM_URL=${LLM_URL}
      - LOKI_URL=http://memory-agent-loki:3100/loki/api/v1/push
      - NEO4J_AUTH=none
    volumes:
      - qdrant_data:/qdrant/storage:z
      - redis_data:/data
      - neo4j_data:/var/lib/neo4j/data

  memory-agent-loki:
    container_name: memory-agent-loki
    profiles:
      - all
      - log
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - memory-network

  memory-agent-promtail:
    container_name: memory-agent-promtail
    profiles:
      - all
      - log
    image: grafana/promtail:latest
    volumes:
      - loki_log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - memory-network

  memory-agent-grafana:
    container_name: memory-agent-grafana
    profiles:
      - all
      - log
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://memory-agent-loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana  # Volume persistente per i dati di Grafana
    ports:
      - "3000:3000"
    networks:
      - memory-network

volumes:
  qdrant_data:
  redis_data:
  grafana_data:
  loki_log:
  neo4j_data:

networks:
  memory-network:
    name: memory-network
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.99.0/24